Харківський університет радіоелектроніки
Факультет комп'ютерних наук
Кафедра програмної інженерії




ЗВІТ
з практичної роботи №2 
з дисципліни "Архітектура програмного забезпечення"
на тему: "Архітектура відомих програмних систем"




Виконав 
ст. гр. ПЗПІ-22-1
Токар Денис Юрійович


Перевірив
ст. викладач катедри ПІ
Лещинський Володимир Олександрович



Харків 2025 р.
1 Історія змін
№	Дата      	Версія звіту	Опис змін та виправлень
1	07.06.2025	0.1	Створення і заповнення


2 ЗАВДАННЯ
Метою практичного заняття №2 було дослідження та аналіз архітектури однієї з відомих складних програмних систем. Завдання передбачало вибір конкретної системи, збір інформації про її архітектурні особливості, технологічний стек, ключові компоненти та принципи їх взаємодії.
В рамках виконання завдання було обрано для дослідження архітектурні аспекти програмних продуктів української компанії Readdle, відомої своїми продуктивними додатками для мобільних та десктопних платформ (зокрема, Spark Email, PDF Expert). 
3 ОПИС ВИКОНАНОЇ РОБОТИ
В ході виконання практичного завдання №2 було проведено дослідження архітектурних аспектів програмних продуктів компанії Readdle. Зважаючи на комерційний характер продуктів та обмеженість публічної детальної інформації про їхню внутрішню архітектуру, робота базувалася на аналізі доступних джерел, функціональності продуктів та обґрунтованих припущеннях. 
Етапи виконання роботи:
    1. Збір та аналіз інформації:
    • Проведено пошук та вивчення матеріалів, що стосуються компанії Readdle, її продуктів (Spark, PDF Expert, Documents тощо), інженерної культури та використовуваних технологій. Джерелами слугували:
    • Офіційний сайт та блог компанії Readdle.
    • Публікації на технічних ресурсах (наприклад, DOU.ua, AIN.UA).
    • Доповіді співробітників компанії на ІТ-конференціях.
    • Аналіз вакансій Readdle для виявлення технологічного стеку.
    • Огляди та аналіз функціональності самих продуктів.
    • Визначено ключові архітектурні виклики, характерні для Readdle, такі як забезпечення кросплатформенності (iOS, macOS, Android, Windows), надійна синхронізація даних, висока продуктивність клієнтських додатків, безпека користувацьких даних та інтеграція з ШІ-технологіями.
    2. Аналіз архітектурних аспектів ключових продуктів:
    • Spark Email:
    • Сформульовано припущення щодо архітектури клієнтської частини: використання нативних технологій (Swift для Apple-платформ, Kotlin/Java та власна розробка Readdle "Swift for Android toolchain" для Android), застосування архітектурних патернів (MVVM/MVC), локальне кешування.
    • Розглянуто ймовірну архітектуру бекенд-частини: використання Golang для високонавантажених сервісів, мікросервісний підхід для забезпечення масштабованості та гнучкості (сервіси автентифікації, синхронізації пошти, нотифікацій, командних функцій). Обговорено питання синхронізації та безпеки.
    • PDF Expert:
    • Проаналізовано підходи до обробки PDF на клієнті: наголошено на важливості власного або оптимізованого PDF-рушія для забезпечення високої продуктивності рендерингу та редагування.
    • Розглянуто аспекти синхронізації анотацій та документів, а також інтеграцію з хмарними сховищами.
    • Сформульовано гіпотези щодо архітектури нових ШІ-функцій (PDF Copilot), що можуть поєднувати локальну обробку та взаємодію з бекенд-сервісами на базі LLM.
    3. Визначення технологічного стеку та архітектурних принципів:
    • На основі аналізу вакансій та публікацій узагальнено ймовірний технологічний стек Readdle: Swift, Objective-C, Kotlin, Java, Golang, PHP, Node.js, Angular, TypeScript, SQL/NoSQL бази даних, хмарні платформи та інструменти DevOps.
    • Визначено можливі архітектурні принципи, якими керується компанія: фокус на UX, нативність, модульність, мікросервіси для бекенду, асинхронність, безпека "by design", ітеративність.
    4. Підготовка текстової частини звіту (доповіді):
    • Результати дослідження та аналізу були систематизовані та оформлені у вигляді структурованого звіту, що включає опис компанії, методології, архітектурних викликів, аналіз продуктів, технологічного стеку та ймовірних принципів.
    5. Створення презентації:
    • На основі звіту розроблено презентацію, що візуалізує ключові аспекти дослідження. Презентація містить:
    • Інформацію про компанію Readdle та її продукти.
    • Опис архітектурних викликів.
    • Блок-схеми та припущення щодо архітектури Spark та PDF Expert.
    • Огляд технологічного стеку.
    • Ймовірні архітектурні принципи.
    • Для візуалізації були підібрані релевантні зображення.
Вся робота була спрямована на формування уявлення про архітектурні підходи та технологічні рішення, що використовуються при розробці складних продуктивних додатків на прикладі компанії Readdle. 
Посилання на відеозапис доповіді та текст хронологічного опису доповіді знаходиться в додатку А. Слайди презентації в додатку Б.
4 ВИСНОВКИ
За результатами виконання практичного завдання №2 було проведено дослідження та аналіз архітектурних аспектів програмних продуктів компанії Readdle. Незважаючи на обмеженість публічно доступної детальної інформації, вдалося сформувати уявлення про ключові архітектурні виклики, технологічний стек та ймовірні підходи до проєктування, що використовуються компанією.
Основні висновки, зроблені в ході роботи:
    1. Readdle вирішує складні архітектурні завдання, пов'язані з розробкою кросплатформенних продуктивних додатків. Це включає забезпечення консистентного користувацького досвіду, надійної синхронізації даних між різними пристроями та платформами, високої продуктивності нативних клієнтів та безпеки користувацьких даних.
    2. Компанія демонструє прихильність до використання нативних технологій для розробки клієнтських додатків (Swift, Objective-C для Apple-платформ; Kotlin/Java для Android), що дозволяє досягти максимальної продуктивності та інтеграції з операційними системами. Інноваційним підходом є розробка власного інструментарію "Swift for Android toolchain", що свідчить про прагнення до ефективного перевикористання коду.
    3. Для бекенд-частини, ймовірно, використовується мікросервісна архітектура та сучасні технології (наприклад, Golang), що дозволяє забезпечити масштабованість, відмовостійкість та гнучкість для підтримки мільйонів користувачів та реалізації складних функцій (синхронізація, командна робота, ШІ-сервіси).
    4. У продуктах Readdle простежується фокус на високій продуктивності обробки даних на клієнті, особливо в таких додатках як PDF Expert, де швидкість рендерингу та редагування PDF є критичною. Це, ймовірно, досягається за рахунок розробки або глибокої оптимізації власних рушіїв обробки даних.
    5. Інтеграція ШІ-технологій (наприклад, PDF Copilot) є новим викликом та напрямком розвитку, що, ймовірно, реалізується через комбінацію локальних обчислень на пристрої та взаємодії з потужними ШІ-моделями на серверній стороні.
    6. Технологічний стек Readdle є сучасним та різноманітним, що дозволяє обирати оптимальні інструменти для вирішення конкретних завдань на різних рівнях системи.
Дослідження архітектурних аспектів продуктів Readdle дозволило зрозуміти складність створення успішних програмних продуктів світового рівня та оцінити інженерну культуру української компанії. Отримані знання про архітектурні виклики та підходи до їх вирішення є корисними для подальшого професійного розвитку в галузі розробки програмного забезпечення.

Додаток А(посилання на відеозапис доповіді та текст хронологічного опису доповіді)
Відеозапис доповіді на YouTube: https://youtu.be/7w4Ic1rZrn4
Текст хронологічного опису:
00:00 Вступне слово та анонс теми аналізу
00:13 Огляд компанії READDL та її продуктів
00:51 Методологія дослідження та її обмеження
01:26 Основні архітектурні виклики для READDL
01:56 Детальний аналіз архітектури Spark Email: ключові функції та клієнтська частина
02:38 Бекенд Spark Email: технології та функціональність
03:02 Синхронізація та безпека в Spark Email
03:19 Аналіз архітектури PDF Expert: ключові функції та клієнтська частина
03:40 Особливості PDF Expert: робота з файлами, PDF-рушій та синхронізація
04:03 Архітектура PDF Copilot – ШІ-асистента в PDF Expert
04:36 Загальний технологічний стек компанії RIDL: фронтенд, бекенд, веб, бази даних, інфраструктура
05:17 Ключові архітектурні принципи READDL
05:48 Підсумки: успішні архітектурні рішення та інженерна культура READDL
06:11 Завершення та подяка

Додаток Б (слайди презентації доповіді)

Рисунок Б.1 - Слайд 1 – Титульний.


Рисунок Б.2 - Слайд 2 - Про компанію Readdle.


Рисунок Б.3 - Слайд 3 - Методологія дослідження.


Рисунок Б.4 - Слайд 4 - Ключові архітектурні виклики.


Рисунок Б.5 - Слайд 5 - Spark Email, Огляд клієнтської частини.


Рисунок Б.6 - Слайд 6 - Spark Email, Бекенд та безпека.


Рисунок Б.7 - Слайд 7 - PDF Expert, Клієнтська архітектура.


Рисунок Б.8 - Слайд 8 - PDF Expert, Синхронізація та ШІ.


Рисунок Б.9 - Слайд 9 - Технологічний стек.


Рисунок Б.10 - Слайд 10 - Архітектурні принципи.


Рисунок Б.11 - Слайд 11 - Висновки.


